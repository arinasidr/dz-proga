#0x000000 - black 0 0 0 
#0x33FFFF - blue 51 255 255
#0xFF99FF - pink 255 153 255
#0xFF9933 - orange 255 153 51
#0xFFFFFF - white 255 255 255

image = [
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x000000, 0x000000, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x000000, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF99FF, 0x000000, 0x000000, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x000000, 0x000000, 0xFF99FF, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF99FF, 0xFF99FF, 0xFF9933, 0x000000, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x000000, 0xFF9933, 0xFF99FF, 0xFF99FF, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF99FF, 0xFF99FF, 0xFF9933, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF9933, 0xFF99FF, 0xFF99FF, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF9933, 0xFF9933, 0xFFFFFF, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFFFFFF, 0x000000, 0xFF9933, 0xFF9933, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x000000, 0xFF9933, 0xFF9933, 0x000000, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0x000000, 0x000000, 0xFF9933, 0xFF9933, 0x000000, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF99FF, 0xFF99FF, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0x000000, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0x000000, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x000000, 0x000000, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0xFF9933, 0x000000, 0x000000, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
    [0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF, 0x33FFFF],
]

#задание 2
def rgb(rgb):
    r = (rgb >> 16) & 0xFF
    g = (rgb >> 8) & 0xFF
    b = rgb & 0xFF
    return f'\033[38;2;{r};{g};{b}m'

for line in image:
    for pixel in line:
            print(rgb(pixel) + '\u2588'*2, end='')
    print(' ') 


#задание 3 (1 способ)
# gr_blue = int(51 * 0.3 + 255 * 0.59 + 255 * 0.11)
# gr_pink = int(255 * 0.3 + 153 * 0.59 + 255 * 0.11)
# gr_orange = int(255 * 0.3 + 153 * 0.59 + 51 * 0.11)

# for line in image:
#     for pixel in line:
#             if pixel == 0x33FFFF:
#                   print(f'\033[38;2;{gr_blue};{gr_blue};{gr_blue}m' + '\u2588',end='')
#             elif pixel == 0xFF99FF:
#                   print(f'\033[38;2;{gr_pink};{gr_pink};{gr_pink}m' + '\u2588',end='')
#             elif pixel == 0xFF9933:
#                   print(f'\033[38;2;{gr_orange};{gr_orange};{gr_orange}m' + '\u2588',end='')
#             elif pixel == 0x000000:
#                   print(f'\033[38;2;0;0;0m' + '\u2588',end='')
#             elif pixel == 0xFFFFFF:
#                   print(f'\033[38;2;255;255;255m' + '\u2588',end='')  
#     print(' ') 


#задание 3 (2 способ)
# def rgb(rgb):
#     r = (rgb >> 16) & 0xFF
#     g = (rgb >> 8) & 0xFF
#     b = rgb & 0xFF
#     gr = int(r * 0.3 + g * 0.59 + b * 0.11)
#     return f'\033[38;2;{gr};{gr};{gr}m'

# for line in image:
#     for pixel in line:
#             print(rgb(pixel) + '\u2588'*2, end='')
#     print(' ') 



#фильтр собеля
# sobel_x = [
#     [1, 0, -1],
#     [2, 0, -2],
#     [1, 0, -1]
# ]

# sobel_y = [
#     [1, 2, 1],
#     [0, 0, 0],
#     [-1, -2, -1]
# ]

# def sobel(image):
#     height = len(image)
#     width = len(image[0])
#     output = [[0] * width for _ in range(height)]

#     for i in range(1, height - 1):
#         for j in range(1, width - 1):
#             gx = 0
#             gy = 0
#             for k in range(-1, 2):
#                 for l in range(-1, 2):
#                     gx += image[i + k][j + l] * sobel_x[k + 1][l + 1]
#                     gy += image[i + k][j + l] * sobel_y[k + 1][l + 1]
#             magnitude = min(255, max(0, int((gx**2 + gy**2) ** 0.5)))
#             output[i][j] = magnitude

#     return output

# grayimage = [[int((pixel >> 16 & 0xFF) * 0.3 + (pixel >> 8 & 0xFF) * 0.59 + (pixel & 0xFF) * 0.11) for pixel in line] for line in image]


# sobel_image = sobel(grayimage)


# for line in sobel_image:
#     for pixel in line:
#         print(f'\033[38;2;{pixel};{pixel};{pixel}m' + '\u2588' * 2, end='')
#     print('')
